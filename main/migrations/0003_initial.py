# Generated by Django 4.1.4 on 2022-12-06 17:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0002_delete_student'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcMap',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('longitude', models.CharField(max_length=255)),
                ('latitude', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ac_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FailedJobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'failed_jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_resets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalAccessTokens',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tokenable_type', models.CharField(max_length=255)),
                ('tokenable_id', models.PositiveBigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('abilities', models.TextField(blank=True, null=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'personal_access_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profiles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=255)),
                ('uname', models.CharField(max_length=255, unique=True)),
                ('pword', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('contact_no', models.BigIntegerField()),
                ('street', models.CharField(max_length=255)),
                ('barangay', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('user_type', models.CharField(max_length=255)),
                ('is_active', models.IntegerField()),
                ('date_created', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransitReviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commented_by', models.CharField(max_length=255)),
                ('terminal_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('star_ratings', models.TextField()),
                ('date_posted', models.DateField()),
            ],
            options={
                'db_table': 'transit_reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transit_id', models.IntegerField()),
                ('marker_name', models.TextField()),
                ('slug', models.CharField(max_length=255)),
                ('marker_description', models.TextField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('terminal_rating', models.TextField()),
                ('destination_lat', models.FloatField()),
                ('destination_lang', models.FloatField()),
                ('is_active', models.IntegerField()),
                ('is_show', models.IntegerField()),
                ('is_created', models.DateField(blank=True, null=True)),
                ('date_modified', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransitsBak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transit_id', models.IntegerField()),
                ('marker_name', models.TextField()),
                ('slug', models.CharField(max_length=255)),
                ('marker_description', models.TextField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('terminal_rating', models.TextField()),
                ('is_active', models.IntegerField()),
                ('is_show', models.IntegerField()),
                ('is_created', models.DateField(blank=True, null=True)),
                ('date_modified', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transits_bak',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransitType',
            fields=[
                ('transit_id', models.AutoField(primary_key=True, serialize=False)),
                ('transit_type', models.CharField(max_length=255)),
                ('is_active', models.IntegerField()),
                ('date_created', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transit_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('password', models.CharField(max_length=255)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
